{"ast":null,"code":"import { Carro } from '../models/carro.model';\nimport { Moto } from '../models/moto.model';\nimport * as i0 from \"@angular/core\";\nexport class CarsService {\n  constructor() {}\n  generateCarros() {\n    let listaCarros = [];\n    listaCarros[0] = new Carro(\"Fiat\", \"Paleo\", 2, 35000);\n    listaCarros[1] = new Carro(\"Volkswagger\", \"Passat\", 4, 65000);\n    listaCarros[2] = new Carro(\"Ford\", \"Ka\", 2, 25000);\n    listaCarros[3] = new Carro(\"Audi\", \"A3\", 2, 45000);\n    return listaCarros;\n  }\n  generateMotos() {\n    let listaMotos = [];\n    listaMotos[0] = new Moto(\"Suzuki\", \"Honda\", 35000);\n    listaMotos[1] = new Moto(\"Xc3\", \"Honda\", 65000);\n    listaMotos[2] = new Moto(\"Ninja\", \"Honda\", 25000);\n    listaMotos[3] = new Moto(\"XT\", \"Suzuki\", 45000);\n    listaMotos[4] = new Moto(\"Harley Deivison - M1\", \"Harley\", 45000);\n    listaMotos[5] = new Moto(\"Harley Deivison - HBAHB\", \"Harley\", 45000);\n    listaMotos[6] = new Moto(\"Harley Deivison - ÇASKD\", \"Harley\", 45000);\n    return listaMotos;\n  }\n}\nCarsService.ɵfac = function CarsService_Factory(t) {\n  return new (t || CarsService)();\n};\nCarsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CarsService,\n  factory: CarsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["Carro","Moto","CarsService","constructor","generateCarros","listaCarros","generateMotos","listaMotos","factory","ɵfac","providedIn"],"sources":["C:\\workdir\\projects\\data-manipulation-angular-EXECUTANDO\\src\\app\\shared\\services\\cars.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Carro } from '../models/carro.model';\r\nimport { Moto } from '../models/moto.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CarsService {\r\n\r\n  constructor() { }\r\n\r\n  generateCarros(): any {\r\n    let listaCarros:any = [];\r\n\r\n    listaCarros[0] = new Carro(\"Fiat\", \"Paleo\", 2, 35000);\r\n    listaCarros[1] = new Carro(\"Volkswagger\", \"Passat\", 4, 65000);\r\n    listaCarros[2] = new Carro(\"Ford\", \"Ka\", 2, 25000);\r\n    listaCarros[3] = new Carro(\"Audi\", \"A3\", 2, 45000);\r\n\r\n    return listaCarros;\r\n  }\r\n\r\n\r\n  generateMotos(): any {\r\n    let listaMotos:any = [];\r\n\r\n    listaMotos[0] = new Moto(\"Suzuki\", \"Honda\", 35000);\r\n    listaMotos[1] = new Moto(\"Xc3\", \"Honda\", 65000);\r\n    listaMotos[2] = new Moto(\"Ninja\", \"Honda\", 25000);\r\n    listaMotos[3] = new Moto(\"XT\", \"Suzuki\", 45000);\r\n    listaMotos[4] = new Moto(\"Harley Deivison - M1\", \"Harley\", 45000);\r\n    listaMotos[5] = new Moto(\"Harley Deivison - HBAHB\", \"Harley\", 45000);\r\n    listaMotos[6] = new Moto(\"Harley Deivison - ÇASKD\", \"Harley\", 45000);\r\n\r\n    return listaMotos;\r\n  }\r\n\r\n}\r\n"],"mappings":"AACA,SAASA,KAAK,QAAQ,uBAAuB;AAC7C,SAASC,IAAI,QAAQ,sBAAsB;;AAM3C,OAAM,MAAOC,WAAW;EAEtBC,YAAA,GAAgB;EAEhBC,cAAcA,CAAA;IACZ,IAAIC,WAAW,GAAO,EAAE;IAExBA,WAAW,CAAC,CAAC,CAAC,GAAG,IAAIL,KAAK,CAAC,MAAM,EAAE,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC;IACrDK,WAAW,CAAC,CAAC,CAAC,GAAG,IAAIL,KAAK,CAAC,aAAa,EAAE,QAAQ,EAAE,CAAC,EAAE,KAAK,CAAC;IAC7DK,WAAW,CAAC,CAAC,CAAC,GAAG,IAAIL,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC;IAClDK,WAAW,CAAC,CAAC,CAAC,GAAG,IAAIL,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC;IAElD,OAAOK,WAAW;EACpB;EAGAC,aAAaA,CAAA;IACX,IAAIC,UAAU,GAAO,EAAE;IAEvBA,UAAU,CAAC,CAAC,CAAC,GAAG,IAAIN,IAAI,CAAC,QAAQ,EAAE,OAAO,EAAE,KAAK,CAAC;IAClDM,UAAU,CAAC,CAAC,CAAC,GAAG,IAAIN,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,KAAK,CAAC;IAC/CM,UAAU,CAAC,CAAC,CAAC,GAAG,IAAIN,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC;IACjDM,UAAU,CAAC,CAAC,CAAC,GAAG,IAAIN,IAAI,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC;IAC/CM,UAAU,CAAC,CAAC,CAAC,GAAG,IAAIN,IAAI,CAAC,sBAAsB,EAAE,QAAQ,EAAE,KAAK,CAAC;IACjEM,UAAU,CAAC,CAAC,CAAC,GAAG,IAAIN,IAAI,CAAC,yBAAyB,EAAE,QAAQ,EAAE,KAAK,CAAC;IACpEM,UAAU,CAAC,CAAC,CAAC,GAAG,IAAIN,IAAI,CAAC,yBAAyB,EAAE,QAAQ,EAAE,KAAK,CAAC;IAEpE,OAAOM,UAAU;EACnB;;AA5BWL,WAAW,C;mBAAXA,WAAW;AAAA;AAAXA,WAAW,C;SAAXA,WAAW;EAAAM,OAAA,EAAXN,WAAW,CAAAO,IAAA;EAAAC,UAAA,EAHV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}